#pragma once
#include <stdint.h>

/* 8x8 mono font for subset: ' ', '0'-'9', 'A'-'Z', ':', '.', '-' */
struct Glyph
{
    uint8_t rows[8];
};

inline const Glyph *font_lookup(char c)
{
    static const Glyph blank = {{0, 0, 0, 0, 0, 0, 0, 0}};
    /* 0-9 */
    static const Glyph DIG[10] = {
        {{0x3C, 0x66, 0x6E, 0x7E, 0x76, 0x66, 0x3C, 0x00}}, // 0
        {{0x18, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00}}, // 1
        {{0x3C, 0x66, 0x06, 0x0C, 0x30, 0x60, 0x7E, 0x00}}, // 2
        {{0x7E, 0x0C, 0x18, 0x0C, 0x06, 0x66, 0x3C, 0x00}}, // 3
        {{0x0C, 0x1C, 0x3C, 0x6C, 0x7E, 0x0C, 0x0C, 0x00}}, // 4
        {{0x7E, 0x60, 0x7C, 0x06, 0x06, 0x66, 0x3C, 0x00}}, // 5
        {{0x1C, 0x30, 0x60, 0x7C, 0x66, 0x66, 0x3C, 0x00}}, // 6
        {{0x7E, 0x06, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x00}}, // 7
        {{0x3C, 0x66, 0x66, 0x3C, 0x66, 0x66, 0x3C, 0x00}}, // 8
        {{0x3C, 0x66, 0x66, 0x3E, 0x06, 0x0C, 0x38, 0x00}}, // 9
    };
    /* A-Z */
    static const Glyph AZ[26] = {
        {{0x18, 0x3C, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x00}}, // A
        {{0x7C, 0x66, 0x7C, 0x66, 0x66, 0x66, 0x7C, 0x00}}, // B
        {{0x3C, 0x66, 0x60, 0x60, 0x60, 0x66, 0x3C, 0x00}}, // C
        {{0x78, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0x78, 0x00}}, // D
        {{0x7E, 0x60, 0x7C, 0x60, 0x60, 0x60, 0x7E, 0x00}}, // E
        {{0x7E, 0x60, 0x7C, 0x60, 0x60, 0x60, 0x60, 0x00}}, // F
        {{0x3C, 0x66, 0x60, 0x6E, 0x66, 0x66, 0x3E, 0x00}}, // G
        {{0x66, 0x66, 0x7E, 0x66, 0x66, 0x66, 0x66, 0x00}}, // H
        {{0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00}}, // I
        {{0x06, 0x06, 0x06, 0x06, 0x06, 0x66, 0x3C, 0x00}}, // J
        {{0x66, 0x6C, 0x78, 0x70, 0x78, 0x6C, 0x66, 0x00}}, // K
        {{0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x7E, 0x00}}, // L
        {{0x63, 0x77, 0x7F, 0x6B, 0x63, 0x63, 0x63, 0x00}}, // M
        {{0x66, 0x76, 0x7E, 0x7E, 0x6E, 0x66, 0x66, 0x00}}, // N
        {{0x3C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00}}, // O
        {{0x7C, 0x66, 0x66, 0x7C, 0x60, 0x60, 0x60, 0x00}}, // P
        {{0x3C, 0x66, 0x66, 0x66, 0x6E, 0x3C, 0x0E, 0x00}}, // Q
        {{0x7C, 0x66, 0x66, 0x7C, 0x78, 0x6C, 0x66, 0x00}}, // R
        {{0x3E, 0x60, 0x3C, 0x06, 0x06, 0x66, 0x3C, 0x00}}, // S
        {{0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00}}, // T
        {{0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00}}, // U
        {{0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x00}}, // V
        {{0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x63, 0x00}}, // W
        {{0x66, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0x66, 0x00}}, // X
        {{0x66, 0x66, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x00}}, // Y
        {{0x7E, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x7E, 0x00}}, // Z
    };
    static const Glyph COLON = {{0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00}};
    static const Glyph DOT = {{0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00}};
    static const Glyph DASH = {{0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00}};

    if (c == ' ')
        return &blank;
    if (c >= '0' && c <= '9')
        return &DIG[c - '0'];
    if (c >= 'A' && c <= 'Z')
        return &AZ[c - 'A'];
    if (c >= 'a' && c <= 'z')
        return &AZ[c - 'a']; /* 小文字は大文字表示 */
    if (c == ':')
        return &COLON;
    if (c == '.')
        return &DOT;
    if (c == '-')
        return &DASH;
    return &blank;
}
