#pragma once
#include "base.h"

typedef struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL;
typedef struct _EFI_SIMPLE_TEXT_INPUT_PROTOCOL EFI_SIMPLE_TEXT_INPUT_PROTOCOL;

typedef EFI_STATUS(EFIAPI *EFI_TEXT_STRING)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *, CHAR16 *);
typedef EFI_STATUS(EFIAPI *EFI_TEXT_CLEAR_SCREEN)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *);

struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
{
    void *_buf1;
    EFI_TEXT_STRING OutputString;
    void *_buf2[4];
    EFI_TEXT_CLEAR_SCREEN ClearScreen;
};

typedef struct
{
    UINT16 ScanCode;
    CHAR16 UnicodeChar;
} EFI_INPUT_KEY;
typedef EFI_STATUS(EFIAPI *EFI_INPUT_READ_KEY)(EFI_SIMPLE_TEXT_INPUT_PROTOCOL *, EFI_INPUT_KEY *);
struct _EFI_SIMPLE_TEXT_INPUT_PROTOCOL
{
    EFI_INPUT_READ_KEY ReadKeyStroke;
    void *WaitForKey;
};
